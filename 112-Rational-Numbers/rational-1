import (
	"math/big"
	"reflect"
)

# Tutorial of rational type in Go+

// Go+ has various rational number types including bigint, bigrat and bigfloat.
// Here are a few basic examples on bigint type.

## Example 1: declaration and assignment of bigint type variables

// The go + language uses the keyword "var" to declare variables.

var bint1 bigint

var bint2 *big.Int

// the integer rational variable can be assigned when declaration.

var bint3 bigint = 1r << 65

// (1r<<65), the value is equal to the 65th power of 2

// Notice:
// 1. The initial value of a rational variable without assignment is not 0 but "<nil>".
// 2.

println "bint1 =: ", bint1, ", ", reflect.TypeOf(bint1)
println "bint2 =: ", bint2, ", ", reflect.TypeOf(bint2)
println "bint3 =: ", bint3, ", ", reflect.TypeOf(bint3)

// Running resultsï¼š
//bint1 =:  <nil> ,  builtin.Gop_bigint
//bint2 =:  <nil> ,  *big.Int
//bint3 =:  36893488147419103232 ,  builtin.Gop_bigint
